@model FitnessTracker.Models.WorkoutEdit

@{
    ViewBag.Title = "Edit";
}
<div class="container">
    <h2>Workout</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Edit</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.WorkoutId)

            <div class="form-group">
                @Html.LabelFor(model => model.NameOfWorkout, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NameOfWorkout, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameOfWorkout, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Day, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DayOfWorkout,"Workout by Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DayOfWorkout, new { htmlAttributes = new { @class = "form-control", @Value = Model.DayOfWorkout.ToShortDateString() } })
                    @Html.ValidationMessageFor(model => model.DayOfWorkout, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExerciseId, "Exercise", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ExerciseId", new SelectList(Model.Exercise, "ExerciseId", "NameOfExercise"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ExerciseId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TrainerId, "Trainer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TrainerId", new SelectList(Model.Trainer, "TrainerId", "TrainerName"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TrainerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
</div>

<style>
    select {
        width: 500px;
        padding: 8px 0;
    }
</style>
